openapi: 3.0.3
info:
  title: ReRandom API
  description: API для генерации случайных чисел
  version: 1.0.0
  contact:
    name: ReRandom Support
servers:
  - url: http://localhost:8080
    description: Development server

paths:
  /login:
    post:
      tags:
        - Authentication
      summary: Вход пользователя
      description: Аутентификация пользователя с выдачей JWT токенов
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "user123"
                password:
                  type: string
                  example: "password123"
      responses:
        '200':
          description: Успешная аутентификация
          headers:
            Set-Cookie:
              schema:
                type: string
                example: "refresh_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; HttpOnly; Secure; Path=/; Max-Age=604800"
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /refresh:
    post:
      tags:
        - Authentication
      summary: Обновление access токена
      description: Обновляет access токен используя refresh токен из куки
      parameters:
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
            example: "refresh_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Новый access токен
          content:
            text/plain:
              schema:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Недействительный refresh токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /predict/add:
    post:
      tags:
        - Predictions
      summary: Добавить предикт
      description: Создает новый предикт
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - answ
              properties:
                answ:
                  type: integer
                  example: 42
                min:
                  type: integer
                  example: 1
                max:
                  type: integer
                  example: 100
                drop_count:
                  type: integer
                  example: 5
      responses:
        '201':
          description: Предикт успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Predict'
        '400':
          description: Неверные параметры
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /predict/list:
    get:
      tags:
        - Predictions
      summary: Список предиктов
      description: Получить список всех предиктов пользователя
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Список предиктов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Predict'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /predict/remove/{uuid}:
    delete:
      tags:
        - Predictions
      summary: Удалить предикт
      description: Удаляет предикт по UUID
      security:
        - BearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Предикт успешно удален
        '404':
          description: Предикт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /predict/edit/{uuid}:
    put:
      tags:
        - Predictions
      summary: Редактировать предикт
      description: Редактирует существующий предикт по UUID
      security:
        - BearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answ:
                  type: integer
                  example: 42
                min:
                  type: integer
                  example: 1
                max:
                  type: integer
                  example: 100
                drop_count:
                  type: integer
                  example: 5
      responses:
        '200':
          description: Предикт успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Predict'
        '404':
          description: Предикт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Неверные параметры
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /integers/:
    get:
      tags:
        - Random Numbers
      summary: Генерация случайных целых чисел
      description: Генерирует случайные целые числа с заданными параметрами
      parameters:
        - name: num
          in: query
          description: Количество случайных чисел для генерации
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 10000
            example: 1
        - name: min
          in: query
          description: Минимальное значение
          required: true
          schema:
            type: integer
            example: 1
        - name: max
          in: query
          description: Максимальное значение
          required: true
          schema:
            type: integer
            example: 636
        - name: col
          in: query
          description: Количество колонок в выводе
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
            example: 1
        - name: base
          in: query
          description: Система счисления (2, 8, 10, 16)
          required: false
          schema:
            type: integer
            enum: [2, 8, 10, 16]
            default: 10
            example: 10
        - name: format
          in: query
          description: |
            Формат вывода:
            - plain: простой текст с числом
            - html: HTML с центрированным числом, параметрами и временной меткой
            - json: JSON объект с числами и метаданными
          required: false
          schema:
            type: string
            enum: [plain, html, json]
            default: plain
            example: plain
        - name: rnd
          in: query
          description: Тип генератора случайных чисел
          required: false
          schema:
            type: string
            enum: [new, id.identifier]
            default: new
            example: new
        - name: cl
          in: query
          description: Тип символов для вывода
          required: false
          schema:
            type: string
            enum: [w, b]
            default: w
            example: w
      responses:
        '200':
          description: Успешная генерация случайных чисел
          content:
            text/plain:
              schema:
                type: string
                example: "425"
            application/json:
              schema:
                type: object
                properties:
                  numbers:
                    type: array
                    items:
                      type: integer
                    example: [425]
                  parameters:
                    type: object
                    properties:
                      num:
                        type: integer
                      min:
                        type: integer
                      max:
                        type: integer
                      base:
                        type: integer
            text/html:
              schema:
                type: string
                example: "<center><span style='font-size:100%;font-weight:bold;'>241</span><span style='font-size:70%;'>Min:&nbsp;1, Max:&nbsp;636<br>2025-09-24 09:17:32 UTC</span></center>"
        '400':
          description: Неверные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Код ошибки
          example: "invalid_parameter"
        message:
          type: string
          description: Описание ошибки
          example: "Invalid parameter value"
        details:
          type: string
          description: Дополнительные детали ошибки
          example: "Parameter 'num' must be between 1 and 10000"

    Predict:
      type: object
      required:
        - uuid
        - answ
        - finished
        - added
      properties:
        uuid:
          type: string
          format: uuid
          description: Уникальный идентификатор предикта
          example: "123e4567-e89b-12d3-a456-426614174000"
        answ:
          type: integer
          description: Ответ предикта
          example: 42
        min:
          type: integer
          description: Минимальное значение
          example: 1
        max:
          type: integer
          description: Максимальное значение
          example: 100
        dropped:
          type: integer
          description: Количество сброшенных попыток
          example: 3
        max_drops:
          type: integer
          description: Максимальное количество сбросов
          example: 5
        finished:
          type: boolean
          description: Завершен ли предикт
          example: false
        added:
          type: integer
          format: int64
          description: Unix timestamp добавления
          example: 1727240952
        last_dropped:
          type: integer
          format: int64
          description: Unix timestamp последнего сброса
          example: 1727240952

tags:
  - name: Random Numbers
    description: Операции для генерации случайных чисел
  - name: Authentication
    description: Операции для аутентификации пользователей
  - name: Predictions
    description: Операции для работы с предиктами